{"mappings":"qhBACA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,kBAAmBC,SAASC,cAAc,SAC1CC,gBAAiBF,SAASC,cAAc,yBACxCE,eAAgBH,SAASC,cAAc,wBACvCG,YAAaJ,SAASC,cAAc,0BACpCI,UAAWL,SAASC,cAAc,0BA0BpC,SAASK,GAAQC,SAAEA,EAAQC,MAAEA,IAC3BC,EAAAb,GAASc,OAAOC,QAAQ,uBAAqBJ,QAAiBC,M,CAGhE,SAASI,GAAML,SAAEA,EAAQC,MAAEA,IACzBC,EAAAb,GAASc,OAAOG,QAAQ,sBAAoBN,QAAeC,M,CAG7D,SAASM,EAAcP,EAAUC,GAC/B,MAAMO,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEZ,E,MAAUC,IAEpBY,EAAO,C,SAAEb,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAzCbV,EAAKC,kBAAkBuB,iBAAiB,UAGxC,SAAsBC,GACpBA,EAAIC,iBACJ,MAAMtB,EAAkBuB,OAAO3B,EAAKI,gBAAgBwB,OAC9CvB,EAAiBsB,OAAO3B,EAAKK,eAAeuB,OAC5CtB,EAAcqB,OAAO3B,EAAKM,YAAYsB,OAC5C5B,EAAKO,UAAUsB,UAAW,EAE1B,IAAK,IAAIC,EAAI,EAAGA,EAAIxB,EAAawB,GAAK,EAAE,CAEtCd,EAAec,EAAI,EADE1B,EAAkBC,EAAiByB,GAEvDC,KAAKvB,GACLwB,MAAMlB,GACNmB,SAAQ,KACJH,EAAK,IAAOxB,IACbN,EAAKO,UAAUsB,UAAW,EAAK,G,KAhBvC7B,EAAKO,UAAUsB,UAAW","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport Notiflix from 'notiflix';\n\nconst refs = {\n  formCreatePromise: document.querySelector('.form'),\n  inputFirstDelay: document.querySelector('input[name = \"delay\"]'),\n  inputStepDelay: document.querySelector('input[name = \"step\"]'),\n  inputAmount: document.querySelector('input[name = \"amount\"]'),\n  btnSubmit: document.querySelector('button[type=\"submit\"]'), \n};\n\nrefs.formCreatePromise.addEventListener('submit', onFormSubmit);\nrefs.btnSubmit.disabled = false;\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  const inputFirstDelay = Number(refs.inputFirstDelay.value);\n  const inputStepDelay = Number(refs.inputStepDelay.value);\n  const inputAmount = Number(refs.inputAmount.value);\n  refs.btnSubmit.disabled = true;\n  \n  for (let i = 0; i < inputAmount; i += 1){\n    const deleyCounter = inputFirstDelay + inputStepDelay * i;\n    createPromise((i + 1), deleyCounter)\n    .then(resolve)\n    .catch(error)\n    .finally(() => {\n      if((i + 1) === inputAmount) {\n        refs.btnSubmit.disabled = false;\n      }\n    });\n  };\n};\n\nfunction resolve({ position, delay }) { \n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n};\n\nfunction error({ position, delay }) {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((fulfill, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        fulfill({ position, delay })\n      } else {\n        reject({ position, delay })\n      }\n    }, delay);\n  });\n};\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","formCreatePromise","document","querySelector","inputFirstDelay","inputStepDelay","inputAmount","btnSubmit","$47d4ff9957288465$var$resolve","position","delay","$parcel$interopDefault","Notify","success","$47d4ff9957288465$var$error","failure","$47d4ff9957288465$var$createPromise","shouldResolve","Math","random","Promise","fulfill","reject","setTimeout","addEventListener","evt","preventDefault","Number","value","disabled","i","then","catch","finally"],"version":3,"file":"03-promises.9af2154b.js.map"}