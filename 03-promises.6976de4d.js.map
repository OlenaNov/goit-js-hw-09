{"mappings":"qhBACA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,kBAAmBC,SAASC,cAAc,UAG5CH,EAAKC,kBAAkBG,iBAAiB,UAIxC,SAAsBC,GACpBA,EAAIC,iBACJ,MAAMC,EAAkBC,OAAOR,EAAKC,kBAAkBQ,SAAS,GAAGC,OAC5DC,EAAiBH,OAAOR,EAAKC,kBAAkBQ,SAAS,GAAGC,OAC3DE,EAAcJ,OAAOR,EAAKC,kBAAkBQ,SAAS,GAAGC,OAE9DG,GAAY,GAEZ,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAaE,GAAK,EAAE,CAEtCC,EAAeD,EAAI,EADEP,EAAkBI,EAAiBG,GAEvDE,KAAKC,GACLC,MAAMC,GACNC,SAAQ,KACJN,EAAK,IAAOF,GACbC,GAAY,EAAM,G,KAlB1B,MAAMQ,EAAYrB,EAAKC,kBAAkBQ,SAAS,GAwBlD,SAASQ,GAAQK,SAAEA,EAAQC,MAAEA,IAC3BC,EAAA1B,GAAS2B,OAAOC,QAAQ,uBAAqBJ,QAAiBC,M,CAGhE,SAASJ,GAAMG,SAAEA,EAAQC,MAAEA,IACzBC,EAAA1B,GAAS2B,OAAOE,QAAQ,sBAAoBL,QAAeC,M,CAG7D,SAASR,EAAcO,EAAUC,GAC/B,MAAMK,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEV,E,MAAUC,IAEpBU,EAAO,C,SAAEX,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIb,SAASV,EAAYsB,GACnBd,EAAUe,SAAWD,C,CA9CvBtB,GAAY","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport Notiflix from 'notiflix';\n\nconst refs = {\n  formCreatePromise: document.querySelector('.form'),\n};\n\nrefs.formCreatePromise.addEventListener('submit', onFormSubmit);\nconst btnSubmit = refs.formCreatePromise.elements[3];\nonActiveBtn(false);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  const inputFirstDelay = Number(refs.formCreatePromise.elements[0].value);\n  const inputStepDelay = Number(refs.formCreatePromise.elements[1].value);\n  const inputAmount = Number(refs.formCreatePromise.elements[2].value);\n\n  onActiveBtn(true);\n  \n  for (let i = 0; i < inputAmount; i += 1){\n    const deleyCounter = inputFirstDelay + inputStepDelay * i;\n    createPromise((i + 1), deleyCounter)\n    .then(resolve)\n    .catch(error)\n    .finally(() => {\n      if((i + 1) === inputAmount) {\n        onActiveBtn(false);\n      }\n    });\n  };\n};\n\nfunction resolve({ position, delay }) { \n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n};\n\nfunction error({ position, delay }) {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((fulfill, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        fulfill({ position, delay })\n      } else {\n        reject({ position, delay })\n      }\n    }, delay);\n  });\n};\n\nfunction onActiveBtn(state) {\n  btnSubmit.disabled = state;\n};"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","formCreatePromise","document","querySelector","addEventListener","evt","preventDefault","inputFirstDelay","Number","elements","value","inputStepDelay","inputAmount","$47d4ff9957288465$var$onActiveBtn","i","$47d4ff9957288465$var$createPromise","then","$47d4ff9957288465$var$resolve","catch","$47d4ff9957288465$var$error","finally","$47d4ff9957288465$var$btnSubmit","position","delay","$parcel$interopDefault","Notify","success","failure","shouldResolve","Math","random","Promise","fulfill","reject","setTimeout","state","disabled"],"version":3,"file":"03-promises.6976de4d.js.map"}