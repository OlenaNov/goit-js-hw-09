{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,kBAAmBC,SAASC,cAAc,SAC1CC,gBAAiBF,SAASC,cAAc,yBACxCE,eAAgBH,SAASC,cAAc,wBACvCG,YAAaJ,SAASC,cAAc,0BACpCI,UAAWL,SAASC,cAAc,0BA0BpC,SAASK,EAAQC,G,IAAEC,EAAFD,EAAEC,SAAUC,EAAZF,EAAYE,MAC3BC,EAAAd,GAASe,OAAOC,QAAQ,uBAAwCC,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M,CAGxE,SAASK,EAAMP,G,IAAEC,EAAFD,EAAEC,SAAUC,EAAZF,EAAYE,MACzBC,EAAAd,GAASe,OAAOI,QAAQ,sBAAqCF,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M,CA5BrEX,EAAKC,kBAAkBiB,iBAAiB,UAGxC,SAAsBC,G,kBAQlB,IAoBmBT,EAAUC,EACzBS,GADeV,EAnBJW,EAAI,EAmBUV,EApBRP,EAAkBC,EAAiBgB,EAqBpDD,EAAgBE,KAAKC,SAAW,GAE/B,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLP,EACFK,EAAQ,CAAEf,WAAUC,UAEpBe,EAAO,CAAEhB,WAAUC,S,GAEpBA,E,KA5BFiB,KAAKpB,GACLqB,MAAMb,GACNc,SAAQ,WACJT,EAAK,IAAOf,IACbN,EAAKO,UAAUwB,UAAW,E,KAbhCZ,EAAIa,iBACJ,IAAM5B,EAAkB6B,OAAOjC,EAAKI,gBAAgB8B,OAC9C7B,EAAiB4B,OAAOjC,EAAKK,eAAe6B,OAC5C5B,EAAc2B,OAAOjC,EAAKM,YAAY4B,OAC5ClC,EAAKO,UAAUwB,UAAW,EAE1B,IAAK,IAAII,EAAI,EAAGA,EAAI7B,EAAa6B,GAAK,EAACC,EAAAD,E,IATzCnC,EAAKO,UAAUwB,UAAW,C","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport Notiflix from 'notiflix';\n\nconst refs = {\n  formCreatePromise: document.querySelector('.form'),\n  inputFirstDelay: document.querySelector('input[name = \"delay\"]'),\n  inputStepDelay: document.querySelector('input[name = \"step\"]'),\n  inputAmount: document.querySelector('input[name = \"amount\"]'),\n  btnSubmit: document.querySelector('button[type=\"submit\"]'), \n};\n\nrefs.formCreatePromise.addEventListener('submit', onFormSubmit);\nrefs.btnSubmit.disabled = false;\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  const inputFirstDelay = Number(refs.inputFirstDelay.value);\n  const inputStepDelay = Number(refs.inputStepDelay.value);\n  const inputAmount = Number(refs.inputAmount.value);\n  refs.btnSubmit.disabled = true;\n  \n  for (let i = 0; i < inputAmount; i += 1){\n    const deleyCounter = inputFirstDelay + inputStepDelay * i;\n    createPromise((i + 1), deleyCounter)\n    .then(resolve)\n    .catch(error)\n    .finally(() => {\n      if((i + 1) === inputAmount) {\n        refs.btnSubmit.disabled = false;\n      }\n    });\n  };\n};\n\nfunction resolve({ position, delay }) { \n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n};\n\nfunction error({ position, delay }) {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((fulfill, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        fulfill({ position, delay })\n      } else {\n        reject({ position, delay })\n      }\n    }, delay);\n  });\n};\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","formCreatePromise","document","querySelector","inputFirstDelay","inputStepDelay","inputAmount","btnSubmit","$ce04d3a99e08e73b$var$resolve","param","position","delay","$parcel$interopDefault","Notify","success","concat","$ce04d3a99e08e73b$var$error","failure","addEventListener","evt","shouldResolve","i","Math","random","Promise","fulfill","reject","setTimeout","then","catch","finally","disabled","preventDefault","Number","value","i1","_loop"],"version":3,"file":"03-promises.36b26478.js.map"}