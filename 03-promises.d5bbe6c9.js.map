{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,kBAAmBC,SAASC,cAAc,UAG5CH,EAAKC,kBAAkBG,iBAAiB,UAIxC,SAAsBC,G,kBASlB,IAoBmBC,EAAUC,EACzBC,GADeF,EAnBJG,EAAI,EAmBUF,EApBRG,EAAkBC,EAAiBF,EAqBpDD,EAAgBI,KAAKC,SAAW,GAE/B,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLT,EACFO,EAAQ,CAAET,WAAUC,UAEpBS,EAAO,CAAEV,WAAUC,S,GAEpBA,E,KA5BFW,KAAKC,GACLC,MAAMC,GACNC,SAAQ,WACJb,EAAK,IAAOc,GACbC,GAAY,E,KAdlBnB,EAAIoB,iBACJ,IAAMf,EAAkBgB,OAAO1B,EAAKC,kBAAkB0B,SAAS,GAAGC,OAC5DjB,EAAiBe,OAAO1B,EAAKC,kBAAkB0B,SAAS,GAAGC,OAC3DL,EAAcG,OAAO1B,EAAKC,kBAAkB0B,SAAS,GAAGC,OAE9DJ,GAAY,GAEZ,IAAK,IAAIK,EAAI,EAAGA,EAAIN,EAAaM,GAAK,EAACC,EAAAD,E,IAXzC,IAAME,EAAY/B,EAAKC,kBAAkB0B,SAAS,GAwBlD,SAASR,EAAQa,G,IAAE1B,EAAF0B,EAAE1B,SAAUC,EAAZyB,EAAYzB,MAC3B0B,EAAAnC,GAASoC,OAAOC,QAAQ,uBAAwCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,CAGxE,SAASc,EAAMW,G,IAAE1B,EAAF0B,EAAE1B,SAAUC,EAAZyB,EAAYzB,MACzB0B,EAAAnC,GAASoC,OAAOG,QAAQ,sBAAqCD,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,CAiBrE,SAASiB,EAAYc,GACnBP,EAAUQ,SAAWD,C,CA9CvBd,GAAY,E","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport Notiflix from 'notiflix';\n\nconst refs = {\n  formCreatePromise: document.querySelector('.form'),\n};\n\nrefs.formCreatePromise.addEventListener('submit', onFormSubmit);\nconst btnSubmit = refs.formCreatePromise.elements[3];\nonActiveBtn(false);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  const inputFirstDelay = Number(refs.formCreatePromise.elements[0].value);\n  const inputStepDelay = Number(refs.formCreatePromise.elements[1].value);\n  const inputAmount = Number(refs.formCreatePromise.elements[2].value);\n\n  onActiveBtn(true);\n  \n  for (let i = 0; i < inputAmount; i += 1){\n    const deleyCounter = inputFirstDelay + inputStepDelay * i;\n    createPromise((i + 1), deleyCounter)\n    .then(resolve)\n    .catch(error)\n    .finally(() => {\n      if((i + 1) === inputAmount) {\n        onActiveBtn(false);\n      }\n    });\n  };\n};\n\nfunction resolve({ position, delay }) { \n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n};\n\nfunction error({ position, delay }) {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((fulfill, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        fulfill({ position, delay })\n      } else {\n        reject({ position, delay })\n      }\n    }, delay);\n  });\n};\n\nfunction onActiveBtn(state) {\n  btnSubmit.disabled = state;\n};"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","formCreatePromise","document","querySelector","addEventListener","evt","position","delay","shouldResolve","i","inputFirstDelay","inputStepDelay","Math","random","Promise","fulfill","reject","setTimeout","then","$ce04d3a99e08e73b$var$resolve","catch","$ce04d3a99e08e73b$var$error","finally","inputAmount","$ce04d3a99e08e73b$var$onActiveBtn","preventDefault","Number","elements","value","i1","_loop","$ce04d3a99e08e73b$var$btnSubmit","param","$parcel$interopDefault","Notify","success","concat","failure","state","disabled"],"version":3,"file":"03-promises.d5bbe6c9.js.map"}